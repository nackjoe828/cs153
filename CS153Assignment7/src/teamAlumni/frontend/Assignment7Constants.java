/* Generated By:JJTree&JavaCC: Do not edit this line. Assignment7Constants.java */
package teamAlumni.frontend;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Assignment7Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int BOOLEAN = 8;
  /** RegularExpression Id. */
  int REAL = 9;
  /** RegularExpression Id. */
  int BREAK = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int RETURN = 12;
  /** RegularExpression Id. */
  int CASE = 13;
  /** RegularExpression Id. */
  int INTEGER = 14;
  /** RegularExpression Id. */
  int TRUE = 15;
  /** RegularExpression Id. */
  int FALSE = 16;
  /** RegularExpression Id. */
  int CHAR = 17;
  /** RegularExpression Id. */
  int VOID = 18;
  /** RegularExpression Id. */
  int CONSTANT = 19;
  /** RegularExpression Id. */
  int SWITCH = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int CONTINUE = 22;
  /** RegularExpression Id. */
  int FOR = 23;
  /** RegularExpression Id. */
  int NULL = 24;
  /** RegularExpression Id. */
  int FUNC_LIST = 25;
  /** RegularExpression Id. */
  int FUNC_DEF = 26;
  /** RegularExpression Id. */
  int STATEMENT = 27;
  /** RegularExpression Id. */
  int NEW_TYPE = 28;
  /** RegularExpression Id. */
  int DECLARATION = 29;
  /** RegularExpression Id. */
  int POINTER = 30;
  /** RegularExpression Id. */
  int MAIN = 31;
  /** RegularExpression Id. */
  int STRING = 32;
  /** RegularExpression Id. */
  int STAR = 33;
  /** RegularExpression Id. */
  int MINUS = 34;
  /** RegularExpression Id. */
  int PLUS = 35;
  /** RegularExpression Id. */
  int ASSIGN = 36;
  /** RegularExpression Id. */
  int SLASH = 37;
  /** RegularExpression Id. */
  int COLON = 38;
  /** RegularExpression Id. */
  int SEMICOLON = 39;
  /** RegularExpression Id. */
  int HOOK = 40;
  /** RegularExpression Id. */
  int LT = 41;
  /** RegularExpression Id. */
  int GT = 42;
  /** RegularExpression Id. */
  int DOT = 43;
  /** RegularExpression Id. */
  int COMMA = 44;
  /** RegularExpression Id. */
  int SINGLEQUOTE = 45;
  /** RegularExpression Id. */
  int QUOTE = 46;
  /** RegularExpression Id. */
  int LPAREN = 47;
  /** RegularExpression Id. */
  int RPAREN = 48;
  /** RegularExpression Id. */
  int LBRACE = 49;
  /** RegularExpression Id. */
  int RBRACE = 50;
  /** RegularExpression Id. */
  int LE = 51;
  /** RegularExpression Id. */
  int GE = 52;
  /** RegularExpression Id. */
  int EQ = 53;
  /** RegularExpression Id. */
  int NE = 54;
  /** RegularExpression Id. */
  int IDENTIFIER = 55;
  /** RegularExpression Id. */
  int DIGIT = 56;
  /** RegularExpression Id. */
  int LETTER = 57;
  /** RegularExpression Id. */
  int CHARACTER = 58;
  /** RegularExpression Id. */
  int SYMBAL = 59;
  /** RegularExpression Id. */
  int INTNUM = 60;
  /** RegularExpression Id. */
  int DIGITWITHOUTZERO = 61;
  /** RegularExpression Id. */
  int REALNUM = 62;
  /** RegularExpression Id. */
  int FRACTION = 63;
  /** RegularExpression Id. */
  int EXPSIGN = 64;
  /** RegularExpression Id. */
  int OPTSIGN = 65;
  /** RegularExpression Id. */
  int ERROR = 66;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"if\"",
    "\"boolean\"",
    "\"real\"",
    "\"break\"",
    "\"else\"",
    "\"return\"",
    "\"case\"",
    "\"integer\"",
    "\"true\"",
    "\"false\"",
    "\"char\"",
    "\"void\"",
    "\"CONSTANT\"",
    "\"switch\"",
    "\"while\"",
    "\"continue\"",
    "\"for\"",
    "\"null\"",
    "\"FUNC_LIST\"",
    "\"FUNC_DEF\"",
    "\"STATEMENT\"",
    "\"NEW_TYPE\"",
    "\"DECLARATION\"",
    "\"PTR\"",
    "\"main\"",
    "\"string\"",
    "\"*\"",
    "\"-\"",
    "\"+\"",
    "\"=\"",
    "\"/\"",
    "\":\"",
    "\";\"",
    "\"?\"",
    "\"<\"",
    "\">\"",
    "\".\"",
    "\",\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "<IDENTIFIER>",
    "<DIGIT>",
    "<LETTER>",
    "<CHARACTER>",
    "<SYMBAL>",
    "<INTNUM>",
    "<DIGITWITHOUTZERO>",
    "<REALNUM>",
    "<FRACTION>",
    "<EXPSIGN>",
    "<OPTSIGN>",
    "<ERROR>",
  };

}
